# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013, Various
# This file is distributed under the same license as the Elgg package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Elgg 1.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-05 02:56+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../tutorials/blog.rst:2
# 21e74eaed8904a12ae38034335ca83e5
msgid "Building a Blog Plugin"
msgstr ""

#: ../../tutorials/blog.rst:4
# 0167ee1e1d514c99840e036032e4ba7c
msgid "Build a simple blogging plugin using Elgg."
msgstr ""

#: ../../tutorials/blog.rst:6
# 260802b742ba44b5a02689b42191dd30
msgid "This duplicates features in the bundled blog plugin, so be sure to disable that while working on your own version."
msgstr ""

#: ../../tutorials/blog.rst:0
#: ../../tutorials/widget.rst:0
# 011f57a8aee5459fbe8e3fe26be547d0
# 2ce7ce36cb644ef7b962bce87cd9d7ec
msgid "Contents"
msgstr ""

#: ../../tutorials/blog.rst:14
# 3228f02ef4344499b9f2cf6b16c529a4
msgid "Create the plugin skeleton"
msgstr ""

#: ../../tutorials/blog.rst:16
# 0461df2f503443f796b453e5615b0363
msgid "The name of the directory under \"mod\" becomes the id of your plugin::"
msgstr ""

#: ../../tutorials/blog.rst:22
# 0deb244afb55497e8ca1499aca72593e
msgid "You'll need to add a manifest file in ``/mod/my_blog/manifest.xml``. This file stores basic information about the plugin. See :doc:`/guides/plugins` for the template. You can also just copy the manifest file from another plugin and then change the values to fit your new plugin. Be sure to change the author and website, and remove the “bundled” category!"
msgstr ""

#: ../../tutorials/blog.rst:28
# 3228f02ef4344499b9f2cf6b16c529a4
msgid "Create a page for composing the blogs"
msgstr ""

#: ../../tutorials/blog.rst:30
# d492d7630ace4ec5bcfba4165b15b62d
msgid "Create the file ``add.php`` in ``/mod/my_blog/pages/my_blog/``."
msgstr ""

#: ../../tutorials/blog.rst:61
# 1ae669c566df46f79b3f145be20da6a9
msgid "Create the form for creating a new my\\_blog post"
msgstr ""

#: ../../tutorials/blog.rst:63
# ad1783b507ae4b00802b704f2509bbc1
msgid "Create a file at ``/mod/my_blog/views/default/forms/my_blog/save.php`` that contains the form body. This corresponds to view that is called above: ``elgg_view_form(\"my_blog/save\")``."
msgstr ""

#: ../../tutorials/blog.rst:67
# cd2c84a34a5544f79cb4adfd126b6107
msgid "The form should have input fields for the title, body and tags. Because you used ``elgg_view_form()``, you do not need to include form tag markup. The view will be automatically wrapped with:"
msgstr ""

#: ../../tutorials/blog.rst:71
# f087a93e2d224d1a90e95c64f7026e5a
msgid "a ``<form>`` tag and the necessary attributes"
msgstr ""

#: ../../tutorials/blog.rst:72
# 4ce539be5269455cac79b69d899c0e6f
msgid "anti-csrf tokens"
msgstr ""

#: ../../tutorials/blog.rst:74
# 9fea282891824a27b0b5119822209f36
msgid "The form's action will be ``\"<?php echo elgg_get_site_url() ?>action/my_blog/save\"``, which we will create in a moment. Here is the content of ``/mod/my_blog/views/default/forms/my_blog/save.php``:"
msgstr ""

#: ../../tutorials/blog.rst:100
# 022125e1172a42339d870e93479a8143
msgid "Notice how the form is calling input views like ``input/longtext``. These are built into Elgg and make it easy to add form components. You can see a complete list of input views in the ``/views/default/input/`` directory."
msgstr ""

#: ../../tutorials/blog.rst:106
# ffd06d8aecee4e42aa625d17bf3daab3
msgid "The above code is not accessibility-friendly."
msgstr ""

#: ../../tutorials/blog.rst:109
# 932af8b4a7e24f8b8e1d453df1688051
msgid "The action file"
msgstr ""

#: ../../tutorials/blog.rst:111
# 39e3741c44b14879a78aabccea04349d
msgid "Create the file ``/mod/my_blog/actions/my_blog/save.php``. This will save the blog post to the database."
msgstr ""

#: ../../tutorials/blog.rst:150
# cefe90d1834942f5a5ada83e3eb90fa8
msgid "A few fields are built into Elgg objects. Title and description are two of these. It makes sense to use description to contain the my\\_blog text. Every entity can have a subtype and in this we are using ``\"my_blog\"``. The tags are stored as metadata."
msgstr ""

#: ../../tutorials/blog.rst:155
# 140158d100a94773abf65f38362c778e
msgid "Every object in Elgg has a built-in URL automatically, although you can override this if you wish. The ``getURL()`` method is called to get that unique URL."
msgstr ""

#: ../../tutorials/blog.rst:160
# 8b6c8f4ea0da49ebad15411a3b109577
msgid "The object view"
msgstr ""

#: ../../tutorials/blog.rst:162
# 46fa2d390d9f471886fba4763d1aa6c8
msgid "Elgg will automatically call the ``object/my_blog`` view to view the my\\_blog post so we need to create the object view."
msgstr ""

#: ../../tutorials/blog.rst:165
# 012a02417f4a42859991e88860283ab4
msgid "Objects in Elgg are a subclass of something called an “entity”. Users, sites, and groups are also subclasses of entity. All entities can (and should) have a subtype, which allows granular control for listing and displaying. Here, we have used the subtype \"``my_blog``\\ \" to identify a my\\_blog post, but any alphanumeric string can be a valid subtype. When picking subtypes, be sure to pick ones that make sense for your plugin."
msgstr ""

#: ../../tutorials/blog.rst:173
# 01ef5ca802d24127a748e31cf5a31be1
msgid "In ``/mod/my_blog/views/default/``, create a folder ``/object/`` and then create a file ``my_blog.php`` in it."
msgstr ""

#: ../../tutorials/blog.rst:176
# 9dbfff397937423aab4653af0033d744
msgid "Each my\\_blog post will be passed to this PHP file as ``$vars['entity']``. (``$vars`` is an array used in the views system to pass variables to a view.) The content of ``object/my_blog.php`` can just be something like:"
msgstr ""

#: ../../tutorials/blog.rst:189
# 3fbf53733e3f4d01a46d7a7417c90a57
msgid "The last line takes the tags on the my\\_blog post and automatically displays them as a series of clickable links. Search is handled automatically."
msgstr ""

#: ../../tutorials/blog.rst:193
# 498e6d7a9b114e94b2c1b2cc043230d4
msgid "(If you're wondering about the '``default``\\ ' in ``/views/default/``, you can create alternative views. RSS, OpenDD, FOAF, mobile and others are all valid view types.)"
msgstr ""

#: ../../tutorials/blog.rst:198
# 0416c8466ffa46ccbcd2ab8e35e54015
msgid "Plugin start.php"
msgstr ""

#: ../../tutorials/blog.rst:200
# 8d84ef4d63f5452ca30244bd9140d215
msgid "Every plugin has a ``start.php`` that initializes it. For this example, we just need to register the action file we created earlier: Also see a related guide about :doc:`/guides/actions`."
msgstr ""

#: ../../tutorials/blog.rst:210
# bf2f1650a1fe4d30a48a39e1504b6ffa
msgid "The action will now be available as ``/action/my_blog/save``. By default, all actions are available only to logged in users. If you want to make an action available to only admins or open it up to unauthenticated users, you can pass 'admin' or 'public' as the third parameter of ``elgg_register_action()``, respectively."
msgstr ""

#: ../../tutorials/blog.rst:216
#: ../../tutorials/hello_world.rst:72
# 9210f58f24004e63817005f791a35418
# e2c71da0dfeb487ba2c619c5f4660839
msgid "Registering a page handler"
msgstr ""

#: ../../tutorials/blog.rst:218
# 76b29137c34b4daca0322c5038cdeb7b
msgid "In order to be able to serve the page that generates the form, you'll need to register a page handler. Add the following to your start.php:"
msgstr ""

#: ../../tutorials/blog.rst:233
# 8d1ebf90e6aa425c83f170a3d6ecbb95
msgid "Page handling functions need to return ``true`` or ``false``. ``true`` means the page exists and has been handled by the page handler. ``false`` means that the page does not exist and the user will be forwarded to the site's 404 page (requested page does not exist or not found). In this particular example, the URL must contain ``/my_blog/add`` for the user to view a page with a form, otherwise the user will see a 404 page."
msgstr ""

#: ../../tutorials/blog.rst:242
# baedc176a13e46e0985af3a3664573c6
msgid "Trying it out"
msgstr ""

#: ../../tutorials/blog.rst:244
# 44ecf748f9db4354808ece59c407b80e
msgid "If you have not enabled the plugin yet, you will need to go to Administration => Configure => Plugins => Advanced. Scroll to the bottom until you see your plugin. Click the Enable button."
msgstr ""

#: ../../tutorials/blog.rst:248
# f98a276eca8e4f57a358520d5a52f27d
msgid "The page to create a new my\\_blog post is accessible at http://yoursite/my_blog/add. Try it out."
msgstr ""

#: ../../tutorials/blog.rst:252
# 2ae6004d5de545cc9e4de1a2ecc786bb
msgid "Displaying list of my\\_blogs"
msgstr ""

#: ../../tutorials/blog.rst:254
# 4e4abb215e7846c2ae79f6764180dc1b
msgid "Let's also create a page that lists my\\_blog entries that have been created."
msgstr ""

#: ../../tutorials/blog.rst:256
# 57db45270d1941c7a9842beff94cd0c2
msgid "Create ``/mod/my_blog/pages/my_blog/all.php``."
msgstr ""

#: ../../tutorials/blog.rst:258
# 79070cde9d8a4872acafc3246b41501d
msgid "To grab the latest my\\_blog posts, we'll use ``elgg_list_entities``. Note that this function returns only the posts that the user can see, so access restrictions are handled transparently:"
msgstr ""

#: ../../tutorials/blog.rst:269
# d9df4bee2fba45b18aef8a1e85182dba
msgid "The function \\`elgg\\_list\\_entities\\` (and its cousins) also transparently handle pagination, and even create an RSS feeds for your my\\_blogs if you have defined these views."
msgstr ""

#: ../../tutorials/blog.rst:273
# 633f23f7ac9d4381b6bf5aaf75caf487
msgid "Finally, we'll draw the page:"
msgstr ""

#: ../../tutorials/blog.rst:281
# 25cfbe5abfdd45b7bd749064b05eecf5
msgid "We will then need to modify our my\\_blog page handler to grab the new page when the URL is set to ``/my_blog/all``. So, your new ``my_blog_page_handler()`` function in start.php should look like:"
msgstr ""

#: ../../tutorials/blog.rst:302
# 61dd77fd75d24f28a0a0fc6501bb3f01
msgid "Now, if the URL contains just ``/my_blog`` or ``/my_blog/all``, the user will see an \"All Site Blogs\" page."
msgstr ""

#: ../../tutorials/blog.rst:306
# 86bb5e71deb244afbab179b29dced970
msgid "A user's blog page"
msgstr ""

#: ../../tutorials/blog.rst:308
# e190ce0796ca4068bc888e97f61e4e6b
msgid "If we grab the Global Unique IDentifier (GUID) of the logged in user, we can limit the my\\_blog posts to those posted by specifying the owner\\_guid argument in the list function above."
msgstr ""

#: ../../tutorials/blog.rst:322
# 9a3a0e4282cc4eed90cd2b7a9d80dd2b
msgid "The end"
msgstr ""

#: ../../tutorials/blog.rst:324
# 04d62952228b47a2925eb78a953cd298
msgid "There's much more that could be done for this plugin, but hopefully this gives you a good idea of how to get started with your own."
msgstr ""

#: ../../tutorials/hello_world.rst:2
# 912ad53db2374735a42186f92dc29e3f
msgid "Hello world"
msgstr ""

#: ../../tutorials/hello_world.rst:4
# e69d7d2fd013448c936538d1e9d98a89
msgid "This tutorial shows you how to build a simple plugin that adds a new page and prints the text \"Hello world\" on it."
msgstr ""

#: ../../tutorials/hello_world.rst:7
# aee3de5b0dc348dd873613da280bb0f4
msgid "In this tutorial we will use the address ``http://www.mysite.com/`` as an example. While developing the plugin you should use the address of your own site instead of the example address."
msgstr ""

#: ../../tutorials/hello_world.rst:12
# 11f33394ccae465ea295c769fb5bcac7
msgid "Required files"
msgstr ""

#: ../../tutorials/hello_world.rst:13
# 5953483594d148b181b380835425ab02
msgid "First of all you need a directory that will hold all the files required by the plugin. Go to the ``mod`` directory of your Elgg site and create there a directory with the name ``hello_world``."
msgstr ""

#: ../../tutorials/hello_world.rst:19
# 97e3b4780aca4b5cb9d3d01511f2dc7e
msgid "Go to the ``hello_world`` directory and create these two files inside it:"
msgstr ""

#: ../../tutorials/hello_world.rst:18
#: ../../tutorials/indexpage.rst:7
# 165a8f16cc55495798ad08ec278a12fd
# 5a39a41f89334fa19d4feb0cb5d96364
msgid "start.php"
msgstr ""

#: ../../tutorials/hello_world.rst:19
# 2fceeb58409b450b921ede85e84bcacf
msgid "manifest.xml"
msgstr ""

#: ../../tutorials/hello_world.rst:21
# abcb95c62d6a42bdb090cb26d304f312
msgid "Copy this to the ``manifest.xml`` file:"
msgstr ""

#: ../../tutorials/hello_world.rst:39
# c76ef2a0072446388866ac1864f4b7a1
msgid "Add your name to the ``<author></author>`` element."
msgstr ""

#: ../../tutorials/hello_world.rst:41
# 326dea191366438ab4888a82a254e4b1
msgid "The plugin has now the minimum requirements for your site to recognize it. Log in to your site as an administrator and access the plugins page at the administration panel. By default the plugin is at the bottom of the plugins list. Click the \"Activate\" button to start it."
msgstr ""

#: ../../tutorials/hello_world.rst:50
# 8618260806c549a79f3c8e2084f6dbf8
msgid "The Hello world plugin has appeared to the bottom of the plugin list"
msgstr ""

#: ../../tutorials/hello_world.rst:53
# dfa26892eac143518579c36d6c09512b
msgid "Initializing the plugin"
msgstr ""

#: ../../tutorials/hello_world.rst:55
# 7c067c0a818b4857a7833eb6df0a091e
msgid "The next step is to add some actual features. Open the ``start.php`` and copy this to it:"
msgstr ""

#: ../../tutorials/hello_world.rst:68
# 90f40f63cc5e4d009c1d11a9ee72d52c
msgid "This piece of code tells Elgg that it should call the function ``hello_world_init()`` when the Elgg core system is initiated."
msgstr ""

#: ../../tutorials/hello_world.rst:74
# f23172b56c2e4931b3afb6dee5017ee2
msgid "The next step is to register a page handler which has the purpose of handling request that users make to the URL http://www.mysite.com/hello/."
msgstr ""

#: ../../tutorials/hello_world.rst:77
# 3a8dae284ba7492799fdb27086b52afc
msgid "Update the ``start.php`` to look like this:"
msgstr ""

#: ../../tutorials/hello_world.rst:101
# 77476deb569248639a3e1ee451fff079
msgid "The call to ``elgg_register_page_handler()`` tells Elgg that it should call the function ``hello_world_page_handler()`` when user goes to your site and has \"hello\" at the end of the URL."
msgstr ""

#: ../../tutorials/hello_world.rst:105
# cd0fc4722a45438c8caa844ba0d74f2f
msgid "The ``hello_world_page_handler()`` makes it possible for the users to access the actual page. Inside the function we first give an array of parameters to the ``elgg_view_layout()`` function."
msgstr ""

#: ../../tutorials/hello_world.rst:112
# 44328d467e354d2a9e40a8b75e62db0a
msgid "The parameters include:"
msgstr ""

#: ../../tutorials/hello_world.rst:110
# 047436400cea4fbca92a73c0b60c4700
msgid "The title of the page"
msgstr ""

#: ../../tutorials/hello_world.rst:111
# cf455eb88c17408b95113c0a194534cd
msgid "The contents of the page"
msgstr ""

#: ../../tutorials/hello_world.rst:112
# 5d3796743c214aa9a5376d17c1af1328
msgid "Filter which is left empty because there's currently nothing to filter"
msgstr ""

#: ../../tutorials/hello_world.rst:114
# 58c095256cc2404898478aad29a5b44e
msgid "This creates the basic layout for the page. The layout is then run through ``elgg_view_page()`` which assembles and outputs the full page."
msgstr ""

#: ../../tutorials/hello_world.rst:117
# f37596d96982474c8a779502a436c1a9
msgid "You can now go to the address http://www.mysite.com/hello/ and you should see the page."
msgstr ""

#: ../../tutorials/hello_world.rst:123
# f37596d96982474c8a779502a436c1a9
msgid "Elgg is now routing the URL http://www.mysite.com/hello/ to the page you created."
msgstr ""

#: ../../tutorials/index.rst:2
# a40f26c0c9e945638442f72f11f38fe3
msgid "Plugin Tutorials"
msgstr ""

#: ../../tutorials/index.rst:4
# c7c9d6c5d8a94ce5980e906a4019c814
msgid "Walk through all the required steps in order to create your own plugins."
msgstr ""

#: ../../tutorials/index.rst:6
# 9487fb94f5a34660838bb8b7be885ed8
msgid "The instructions are detailed enough that you don't need much previous experience on plugin development."
msgstr ""

#: ../../tutorials/indexpage.rst:2
# 5f8acb69e3cc41eb9abd55f80426cb3f
msgid "Customizing the Home Page"
msgstr ""

#: ../../tutorials/indexpage.rst:4
# cc6974255c994c5ab966d0833aaf23db
msgid "Overwrite the default index page on your Elgg install."
msgstr ""

#: ../../tutorials/indexpage.rst:9
# 61c7e9c3d0484a7187304d915ff6500c
msgid "Register a function for the plugin hook called ``index, system`` that returns ``true``. This tells Elgg to assume that another front page has been drawn so it doesn't display the default page."
msgstr ""

#: ../../tutorials/indexpage.rst:12
# 895cdcaa758b40d194f361863bded8da
msgid "Inside start.php you will need something like the following:"
msgstr ""

#: ../../tutorials/indexpage.rst:31
# a7dc47ee84b94f87a309e3e82a9d75a2
msgid "pages/index.php"
msgstr ""

#: ../../tutorials/indexpage.rst:33
# 79942b1eb7b142699e47ceb5fa23ccea
msgid "Then implement the page handler script (/pluginname/pages/index.php) to generate the desired output. Anything output from this script will become your new home page."
msgstr ""

#: ../../tutorials/widget.rst:2
# 43da964c6c904f1f90a78b9c2b327949
msgid "Basic Widget"
msgstr ""

#: ../../tutorials/widget.rst:4
# 4623beb8953e4262a8af625630ee4317
msgid "Create a widget that will display “Hello, World!” and optionally any text the user wants."
msgstr ""

#: ../../tutorials/widget.rst:6
# a8a4130d661540639b15686c51c511d3
msgid "In Elgg, widgets are those components that you can drag onto your profile or admin dashboard."
msgstr ""

#: ../../tutorials/widget.rst:8
# 2f32af18e8984b09b0220bd2892c22d1
msgid "This tutorial assumes you are familiar with basic Elgg concepts such as:"
msgstr ""

#: ../../tutorials/widget.rst:10
# a2df1b31fa784c68a9e29e642972e9bf
msgid ":doc:`/guides/views`"
msgstr ""

#: ../../tutorials/widget.rst:11
# 153ddd2a7ba5485ca04c1dccbff9ea72
msgid ":doc:`/admin/plugins`"
msgstr ""

#: ../../tutorials/widget.rst:13
# 62cde7d647ce4829bfb827ed7eba0fdf
msgid "You should review those if you get confused along the way."
msgstr ""

#: ../../tutorials/widget.rst:20
# 2bf7d582fdc143a0afe6516b4664a32f
msgid "Registering your plugin"
msgstr ""

#: ../../tutorials/widget.rst:22
# 84c8d837442846318346e616a80c09ae
msgid "Plugins are always placed in the ``/mod`` directory. Create a subdirectory there called ``hello``. This will be the name of your plugin and will show up in the Plugins Administration section of Elgg by this name."
msgstr ""

#: ../../tutorials/widget.rst:27
# 1f2c70c943e1492e891bc2bd4f91b54b
msgid "In ``/mod/hello``, create an empty file called ``start.php``. If this file exists, Elgg will load your plugin. Otherwise, you will see a misconfigured plugin error. Go to the admin section of your Elgg install and enable your plugin. Click on the “more info” link under your plugin name. You will notice that nothing happens."
msgstr ""

#: ../../tutorials/widget.rst:34
# 4179dd55c48444bda320696686325c6a
msgid "Copy the ``manifest.xml`` file from one of the plugins in your elgg install into ``/mod/hello``."
msgstr ""

#: ../../tutorials/widget.rst:35
# 8145d972d0104a4eacd1dbf1f1d8d2be
msgid "Update its values so you are listed as the author and change the description to describe this new plugin."
msgstr ""

#: ../../tutorials/widget.rst:36
# 86abc7b14f7f4398849a1b488ec8aa8c
msgid "Reload the Tools Administration page in your browser and check “more info” again."
msgstr ""

#: ../../tutorials/widget.rst:37
# 09f9c1d7987f46eb95c108ac5056ba00
msgid "It will now display the information that you've entered."
msgstr ""

#: ../../tutorials/widget.rst:40
# b24016102ab1428d92d2579cbf7b213b
msgid "Adding the widget view code"
msgstr ""

#: ../../tutorials/widget.rst:42
# 013f34a036ab4dfab600ccb9ebaf7862
msgid "Elgg automatically scans particular directories under plugins looking for particular files. :doc:`/guides/views` make it easy to add your display code or do other things like override default Elgg behavior. For now, we will just be adding the view code for your widget. Create a file at ``/mod/hello/views/default/widgets/helloworld/content.php``. “helloworld” will be the name of your widget within the hello plugin. In this file add the code:"
msgstr ""

#: ../../tutorials/widget.rst:55
# 6376ae70fe2346acb3f88e52d3d23adc
msgid "This will add these words to the widget canvas when it is drawn. Elgg takes care of loading the widget."
msgstr ""

#: ../../tutorials/widget.rst:59
# 2bf7d582fdc143a0afe6516b4664a32f
msgid "Registering your widget"
msgstr ""

#: ../../tutorials/widget.rst:61
# ac7695b699404e66a61e254f18710673
msgid "Elgg needs to be told explicitly that the plugin contains a widget so that it will scan the widget views directory. This is done by calling the elgg\\_register\\_widget\\_type() function. Edit ``/mod/hello/start.php``. In it add these lines:"
msgstr ""

#: ../../tutorials/widget.rst:76
# 15cadbd2237046b9b20b1af07f1c3e4a
msgid "Now go to your profile page using a web browser and add the “hello, world” widget. It should display “Hello, world!”."
msgstr ""

#: ../../tutorials/widget.rst:81
# cb949af3bef34040aeb8d3fbbc72a196
msgid "For real widgets, it is always a good idea to support :doc:`/guides/i18n`."
msgstr ""

#: ../../tutorials/widget.rst:84
# 9a96a69e16c848359c946d4e16d84881
msgid "Allow user customization"
msgstr ""

#: ../../tutorials/widget.rst:86
# e1364e0028ae42c0b03806b76251fcfd
msgid "Click on the edit link on the toolbar of the widget that you've created. You will notice that the only control it gives you by default is over access (over who can see the widget)."
msgstr ""

#: ../../tutorials/widget.rst:90
# 2544ca191e10484696b3bc9eb4cce1b2
msgid "Suppose you want to allow the user to control what greeting is displayed in the widget. Just as Elgg automatically loads ``content.php`` when viewing a widget, it loads ``edit.php`` when a user attempts to edit a widget. In ``/mod/hello/views/default/widgets/helloworld/``, create a file named ``edit.php``. In this file, add the following code:"
msgstr ""

#: ../../tutorials/widget.rst:113
# ab0ac3d7baee46fbb771edb3b67e0e8b
msgid "Notice the relationship between the values passed to the 'name' and the 'value' fields of input/text. The name of the input text box is ``params[message]`` because Elgg will automatically handle widget variables put in the array ``params``. The actual php variable name will be ``message``. If we wanted to use the field ``greeting`` instead of ``message`` we would pass the values ``params[greeting]`` and ``$widget->greeting`` respectively."
msgstr ""

#: ../../tutorials/widget.rst:121
# 9f676763fc6b4f3fb2def6d7a1f34d31
msgid "The reason we set the 'value' option of the array is so that the edit view remembers what the user typed in the previous time he changed the value of his message text."
msgstr ""

#: ../../tutorials/widget.rst:125
# 74221f24cfb7486d9bf9541f4be7b6ac
msgid "Now to display the user's message we need to modify content.php to use this *message* variable. Edit content.php and change it to:"
msgstr ""

#: ../../tutorials/widget.rst:137
# 79ba073a7d244ba1b8cad6c4a2c53f58
msgid "You should now be able to enter a message in the text box and see it appear in the widget."
msgstr ""

#: ../../tutorials/wysiwyg.rst:2
# 2db1b1aef4494f1b8f5c27d782c5f8ab
msgid "Integrating a Rich Text Editor"
msgstr ""

#: ../../tutorials/wysiwyg.rst:4
# bb68e66d75124c39840042803f3cae35
msgid "Build your own wysiwyg plugin."
msgstr ""

#: ../../tutorials/wysiwyg.rst:6
# e1f2cf28e9b5455a87e9de230169391b
msgid "Elgg is bundled with a plugin for CKEditor_, and previously shipped with TinyMCE_ support. However, if you have a wysiwyg that you prefer, you could use this tutorial to help you build your own."
msgstr ""

#: ../../tutorials/wysiwyg.rst:12
# 954e4d7f6d714cc48c572ff151094fe4
msgid "All forms in Elgg should try to use the provided input views located in ``views/default/input``. If these views are used, then it is simple for plugin authors to replace a view, in this case longtext.php, with their wysiwyg."
msgstr ""

#: ../../tutorials/wysiwyg.rst:17
# 803c6425f2694fc89dfb8a74877be54b
msgid "Create your plugin skeleton"
msgstr ""

#: ../../tutorials/wysiwyg.rst:19
# c1201aa9d7b54de991e591ceeaf21ee7
msgid "You will need to create your plugin and give it a start.php file where the plugin gets initialized, as well as a manifest.xml file to tell the Elgg engine about your plugin."
msgstr ""

#: ../../tutorials/wysiwyg.rst:22
# 4cf4ab4d67ea4238b44edff0b89dbeb8
msgid "Read more in the guide about :doc:`/guides/plugins`."
msgstr ""

#: ../../tutorials/wysiwyg.rst:25
# 38fbbe92d0d54fddb1478bf4bc450c13
msgid "Add the WYSIWYG library code"
msgstr ""

#: ../../tutorials/wysiwyg.rst:27
# a30ac144776845f28a4e7d52bac1a835
msgid "Now you need to upload TinyMCE into a directory in your plugin. We strongly encourage you to put third party libraries in a “vendors” directory, as that is standard practice in Elgg plugins and will make your plugin much more approachable by other developers::"
msgstr ""

#: ../../tutorials/wysiwyg.rst:35
# d30c4bb9315048149bd6ae2096ea7e48
msgid "Tell Elgg when and how to load TinyMCE"
msgstr ""

#: ../../tutorials/wysiwyg.rst:37
# 1448fe0771d84d87981d08f8c1b0aa30
msgid "Now that you have:"
msgstr ""

#: ../../tutorials/wysiwyg.rst:39
# 803c6425f2694fc89dfb8a74877be54b
msgid "created your start file"
msgstr ""

#: ../../tutorials/wysiwyg.rst:40
# 7deadbee4309427aa26aa4e7c627b7f2
msgid "intialized the plugin"
msgstr ""

#: ../../tutorials/wysiwyg.rst:41
# f2874977d20041c4a9e4e750ee59db9e
msgid "uploaded the wysiwyg code"
msgstr ""

#: ../../tutorials/wysiwyg.rst:43
# 0e5e7aff167646ff94435cd9a10de08e
msgid "It is time to tell Elgg how to apply TinyMCE to longtext fields."
msgstr ""

#: ../../tutorials/wysiwyg.rst:45
# 95a76103971d45cbb55b8a43c26b9a9a
msgid "We're going to do that by extending the input/longtext view and including some javascript. Create a view tinymce/longtext and add the following code:"
msgstr ""

#: ../../tutorials/wysiwyg.rst:81
# 7c959323b31d4c8dacf2b21abb69e021
msgid "Then, in your plugin's init function, extend the input/longtext view"
msgstr ""

#: ../../tutorials/wysiwyg.rst:89
# 4d52978271834af19356aa1798094648
msgid "That's it! Now every time someone uses input/longtext, TinyMCE will be loaded and applied to that textarea."
msgstr ""

