<?php
// get the form inputs
$uname = get_input('username');
$password = get_input('password');
$noAcc = get_input('noAccount');
//$tags = string_to_tag_array(get_input('tags'));

if ($noAcc == 'on'){
  checkbox_noAccount();
   // register_error('checkbox value '.$noAcc);
    //forward(REFERER);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////
$gcplink = mysql_connect('192.168.0.32', 'root', 'gcped!a', 'wikidb');
if (!$gcplink) {
    die('Could not connect: ' . mysql_error());
    register_error('db connect fail'. mysql_error());
    forward(REFERER);
}

$query = "SELECT * FROM user WHERE user_name = '".$uname."'";
mysql_select_db('wikidb');
$retval = mysql_query( $query, $gcplink );
if(! $retval )
{
    die('Could not get data: ' . mysql_error());
    register_error('Could not get data: ' . mysql_error());
    forward(REFERER);
}
while($row = mysql_fetch_assoc($retval))
{
   // echo $row['user_password']."</br></br>";
    $dbpass = $row['user_password'];
    $gcpuser = $row['user_name'];
    $gcpemail = $row['user_email'];
} 
if ($dbpass == NULL){
    mysql_close($gcplink);
    register_error("No user was found with username: ".$uname);
    forward(REFERER); // REFERER is a global variable that defines the previous page
}
$parts = explode(':', $dbpass);
//print_r($parts);
//echo "</br></br>";
switch($parts[1]) {
    case 'A':
        $given_hash = md5($password);
        $stored_hash = $parts[2];
        break;
    case 'B':
        $given_hash = md5($parts[2]."-".md5($password));
        $stored_hash = $parts[3];
        break;
    default:
        mysql_close($gcplink);
        throw new Exception('Unknown hash type');
        break;
}
//echo $given_hash."</br></br>";
if( $given_hash === $stored_hash) {
    //echo "login was succesful.";
  db_match_success($gcpuser,$gcpemail);
} else {
  db_match_fail();
   // echo "login failed.";
}

mysql_close($gcplink);

function checkbox_noAccount(){
  $gcplink = mysql_connect('192.168.0.32', 'root', 'gcped!a', 'wikidb');
  $loggedInUser = elgg_get_logged_in_user_entity()->username;
  $query = "SELECT * FROM user WHERE user_name = '".$loggedInUser."'";
  mysql_select_db('wikidb');
  $retval = mysql_query( $query, $gcplink );
  if(! $retval )
  {
    die('Could not get data: ' . mysql_error());
    register_error('Could not get data: ' . mysql_error());
    forward(REFERER);
  }
  while($row = mysql_fetch_assoc($retval))
  {
   // echo $row['user_password']."</br></br>";
    $gcpuser = $row['user_name'];
    
  }
  $i=1;
  //$loggedInUser = $loggedInUser.$i;
  //if ($gcpuser != NULL){
  //  register_error("user not null ".$loggedInUser);
  //}
  while ($gcpuser != NULL || $gcpuser != ''){
    
    $loggedInUser = elgg_get_logged_in_user_entity()->username;
    $loggedInUser = $loggedInUser.$i;
    $query = "SELECT * FROM user WHERE user_name = '".$loggedInUser."'";
    mysql_select_db('wikidb');
    $retval = mysql_query( $query, $gcplink );
    if(! $retval )
    {
      die('Could not get data: ' . mysql_error());
      register_error('Could not get data: ' . mysql_error());
      forward(REFERER);
    }
    if (!mysql_fetch_assoc($retval)){
      $gcpuser = NULL;
    }
    //while($mysql_fetch_assoc($retval)row = mysql_fetch_assoc($retval))
    //{
      // echo $row['user_password']."</br></br>";
    //  $gcpuser = $row['user_name'];
    
    //}
    $i++;
  }
//////////////////////
  mysql_close($gcplink);
  db_match_success($loggedInUser, elgg_get_logged_in_user_entity()->email);
  //register_error("logged in user is: ".$loggedInUser." - ".elgg_get_logged_in_user_entity()->email);
  //forward(REFERER); // REFERER is a global variable that defines the previous page
}

function db_match_success($user, $mail){
	$blog = new ElggObject();
	$blog->subtype = "gcpedia_account";
	$blog->title = $user;
	$blog->description = $mail;

	// for now make all my_blog posts public
	$blog->access_id = ACCESS_PUBLIC;

	// owner is logged in user
	$blog->owner_guid = elgg_get_logged_in_user_guid();

	// save tags as metadata
	$blog->tags = $tags;

	// save to database and get id of the new my_blog
	$blog_guid = $blog->save();

	// if the my_blog was saved, we want to display the new post
	// otherwise, we want to register an error and forward back to the form
	if ($blog_guid) {
      mysql_close($gcplink);
   		system_message("Your blog post was saved");
      /////////////////////////////////////////////////////
      //hardcoded address
   		forward("http://gcpedia.tools.gc.ca/simplesaml/module.php/core/as_login.php?AuthId=elgg-idp&ReturnTo=http%3A%2F%2Fgcpedia.tools.gc.ca%2Findex.php%2FMain_Page");//$_SESSION["last_forward_from"]
	   //hardcoded
  } else {
   		mysql_close($gcplink);
      register_error("The blog post could not be saved");
   		forward(REFERER); // REFERER is a global variable that defines the previous page
	}
}
function db_match_fail(){
  mysql_close($gcplink);
  register_error('password does not match');
  forward(REFERER);
}
// create a new my_blog object
